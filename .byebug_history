c
User.first
User.find(Listing.find(@reservation.listing_id).user_id).name
User.find(Listing.find(@reservation.listing_id).user_id)
Listing.find(@reservation.listing_id).user_id
Listing.find(@reservation.listing_id)
@reservation.listing_id
@reservation
@listing
User.find(@reservation.user_id)
(@reservation.user_id).name
(@reservation.user_id)
(@reservation.listing_id)
User.find(21)
Listing.find(@reservation.listing_id).user_id
(Listing.find(@reservation.listing_id).user_id)
User.find(Listing.find(@reservation.listing_id).user_id)
User.find(Listing.find(@reservation.listing_id).user_id).name
User.find(Listing.find(@reservation.listing_id).user_id)
Listing.find(@reservation.listing_id).user_id
@reservation.listing_id.user_id
@reservation.listing_id
@host.name
@host
c
n
@url
c
reservation_url(@reservation.id)
reservation_url
reservation_path
@reservation
@reservation_url
@reservation.url
@reservation
@url
c
n
c
n
listing
n
self
params
c
listing = Listing.find(self.listing_id)c
host = User.find(listing.user_id)
listing.user_id
listing = Listing.find(self.listing_id)
self.listing_id
self
@reservation
params
c
(date_start-date_end).to_i
(date_start-date_end).count
(date_start..date_end).days
(date_start..date_end).count
(date_start..date_end)
(date_start..date_end).to_a
date_start..date_end.to_a
date_start..date_end.count
date_start..date_end
date_start-date_end
date_start*date_end
date_start/date_end
date_end
date_start
c
params[:listing_id]
params[:id]
params
params[:locals]
params
c
params
params[:locals]
params
c
n
result.success?
result
c
params[:id]
params
c
params
@reservation
c
@reservation.errors.messages[:messages]
@reservation.errors.messages
@reservation
params
c
params
c
n
params
c
exit
 Braintree::ClientToken.generate
c
q
ENV["BRAINTREE_PUBLIC_KEY"]
ENV["BRAINTREE_PRIVATE_KEY"]
ENV
Braintree::ClientToken.generate
params
c
image.image.url
image.image
image
image.url
image
c
quit
x.listing
x = @listing.listing_attachments.first
@listing.listing_attachments.first
@listing.listing_attachments
@listing.listing_attachments.count
@listing.listing_attachments
@listing.listing_attachments.each
@listing.listing_attachments
@listing.images
@listing
c
params[:listing_attachments].each {|x| p x}
params[:listing_attachments].each {|x| p x.class}
params[:listing_attachments].each {|x| p x}
params[:listing_attachments]
params[:listing_attachments]['image']
params[:listing_attachments]
c
params[:listing_attachments]
params
c
params[:listing_attachments]
c
params[:listing_attachments]
params[:listing_attachments]['image']
params[:listing_attachments]
params
c
listing_from_params[:images]
listing_from_params.images
listing_from_params
@listing.update(listing_from_params)
@listing
@listing[:images]
@listing
c
y.each {|x| p x }
y.each {|x| p x.class }
y.each {|x| x.class }
sadf
asdf
asdfasd
y.each {|x| x.class }
y.each {|x| x.class}
y.each {|x| p x}
y = listing_from_params[:images]
listing_from_params[:images]
listing_from_params
x.update(listing_from_params.to_hash)
x.update(listing_from_params.to_a)
x.update(listing_from_params)
x = Listing.find(params[:id])
Listing.find(params[:id])
@listing.find(params[:id])
@listing
c
@listing.images
c
@listing.images.each {|x| p x}
@listing.images
@listing.images.each
@listing.images
c
@listing.images.each {|x| p x}
@listing.images
@listing.images.mounted_as
@listing.images.mounted_as[:images]
@listing.images.mounted_as
@listing.images
@listing.image
@listing
c
reservation_from_params[:start_date].empty?
reservation_from_params[:date_start].empty?
c
reservation_from_params[:date_start].empty?
reservation_from_params.nil?
reservation_from_params.present?
reservation_from_params.empty?
reservation_from_params[:date_start].empty?
reservation_from_params[:date_start].nil?
reservation_from_params[:date_start]
reservation_from_params
c
@reservation.errors.messages[:messages].join
@reservation.errors.messages[:messages]
@reservation.errors.messages[:messages].join
@reservation.errors.messages[:messages].to_s
@reservation.errors.messages
@reservation.errors.messages[:messages]
@reservation.errors.messages[:messages].to_s
@reservation.errors.messages[:messages]
@reservation.errors.messages
@reservation.errors
@reservation
c
n
self
self.errors
self
n
self.errors
self
c
errors.full_messages
errors.messages
errors
self.errors.messages
self.errors
self
c
flash[:notice]
flash
c
self.errors
n
self.errors
self
c
self.errors.full_messages
self.errors.messages
self.errors
self
c
@user.errors.full_messages
@user.errors
@user
user
params
sadfsadf
asdfsadf
asdfasd
c
@user.errors.full_messages
@user.errors
@user
c
n
flash[:alert].each {|x| p x}
flash[:alert].each do |x|
