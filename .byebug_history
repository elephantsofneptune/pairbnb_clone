c
params[:id].to_i
params[:id]
current_user.id
current_user
c
n
current_user.role
current_user
c
current_user.role
if current_user.role == 1
if current_user.status == 1
if current_user == 1
current_user
params
c
params
c
n
q
params
c
@listing.errors.full_messages
@listing.errors.full_message
@listing.errors.full_messages
@listing.errors
n
@listing
n
params
c
params
c
n
params
q
@listing = Listing.update(listing_from_params)
@listing
params[:listing]
params
c
params[:listing]
params
c
@user
@user.update(user_from_params)
@user.update(params[:user]
@user = User.find(params[:id])
params
q
params[:user]
params
c
q
@user.encrypted_password.nil?
current_user
@user
user
c
n
user
n
q
user.errors
n
c
n
user
n
params
user
c
User.create_with_auth_and_hash(authentication, auth_hash).errors.full_messages
User.create_with_auth_and_hash(authentication, auth_hash).errors
User.create_with_auth_and_hash(authentication, auth_hash)
user
n
auth_hash
authentication
user
n
c
quit
user
n
user
n
authentication
authentication.user
authentication.user == true
authentication.user
authentication.user?
authentication
c
authentication
authentication.user
user
authentication.user
authentication
return user
user.authentications<<(authentication)
user.authentications
user
n
user
self
c
n
user
n
user
n
authentication
n
authentication
c
quit
User.page.per(5) params[:page]
User.page.per(5)
User.page params[:page]
User.page
User.order(:name).page
User.order(:name).page.first
User.order(:name).page.first(5)
User.order(:name).page
params[:page]
params
c
params[:listing]
params[listing]
params
quit
params
@listing
asdfasdf
c
request.env["omniauth.auth"].info
request.env["omniauth.auth"]
request.env["omniauth"]
request.env
request.env.full_name
request.env
request.full_name
request
auth_hash.last_name
auth_hash
c
auth_hash["token"]
auth_hash[:raw_info]
auth_hash["raw_info"]
auth_hash.first_name
auth_hash
c
q
x
x.user_id = 1
x.user_id
x
x.user_id
x
n
x
c
params[:listing]
params
c
current_user.id
params[current_user.id]
params[:id]
params[:listing]
params
current_user.id
current_user
c
params[:id]
params[:listing]
params[:description]
params
c
quit
user.info
user.name
user
@notice
@next
user
@user
user
c
authentication.user
authentication
auth_hash
authentication
c
authentication.id
authentication
authentication.id
authentication.user
authentication.user_id
authentication
c
n
@next
n
user
n
user
n
auth_hash
c
n
c
n
errors
n
user
n
user
c
authentication
user
c
auth_hash["extra"]["raw_info"]["name"]
auth_hash["extra"]["raw_info"]
auth_hash["extra"]
auth_hash["raw_info"]
auth_hash["info"]["name]
auth_hash[:name]
auth_hash["name"]
auth_hash["full_name"]
auth_hash["name"]
auth_hash["uid"]
auth_hash
c
n
self
User
user
self
q
@user.errors.full_messages
@user.errors.messages
@user.errors
@user.errors.clear
@user.errors
@user
@user.errors[:email].prepend("E-mail").join(" ")
@user.errors[:email].prepend("E-mail").join()
@user.errors[:email].prepend("E-mail")
@user.errors[:email].prepend("adasdfasf")
@user.errors[:email].prepend()
@user.errors[:email].join(" and ")
@user.errors[:email].join
@user.errors[:email]
@user.errors.full_messages
